; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\Debug\main.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__2972590E_concurrencysal@h DB 01H
__196CC136_sal@h DB 01H
__C395F66A_vadefs@h DB 01H
__D5C25611_vcruntime@h DB 01H
__311F130C_xkeycheck@h DB 01H
__AEBEEEE9_yvals_core@h DB 01H
__05EEB633_limits@h DB 01H
__7CE37BCF_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__D5F74309_vcruntime_new@h DB 01H
__ED298667_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__B40C025A_crtdefs@h DB 01H
__97CA0262_use_ansi@h DB 01H
__4E4CEF82_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__F80C593D_cstdlib DB 01H
__6CC4302B_xtr1common DB 01H
__7178C802_intrin0@inl@h DB 01H
__AD21BB51_intrin0@h DB 01H
__7BD6CF81_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__FAE305CF_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__4BC88476_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__B49EF1DD_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__6068D39C_cwchar DB 01H
__23A856AA_iosfwd DB 01H
__5DC78390_cstddef DB 01H
__33B42F3D_initializer_list DB 01H
__BB98980C_stdint@h DB 01H
__4552B840_cstdint DB 01H
__7FB6D5C7_type_traits DB 01H
__CF01DCB6_utility DB 01H
__12DC71E1___msvc_iter_core@hpp DB 01H
__D740E0F1_xutility DB 01H
__C6EC57B1_iterator DB 01H
__F7972D0B_share@h DB 01H
__3D410F40___msvc_system_error_abi@hpp DB 01H
__67C27134_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__27A4BD10_eh@h DB 01H
__E5C78335_vcruntime_exception@h DB 01H
__7C536CCC_exception DB 01H
__B9985323_float@h DB 01H
__89A7CE48_cfloat DB 01H
__98438E05_isa_availability@h DB 01H
__EF41832C_limits DB 01H
__0DB0C2E5_new DB 01H
__765FE01A_xatomic@h DB 01H
__A594BF75_xmemory DB 01H
__DFFCB714___msvc_sanitizer_annotate_container@hpp DB 01H
__D14739E9_xstring DB 01H
__F51D5691_stdexcept DB 01H
__ED2630B9_xcall_once@h DB 01H
__E6D9FA8D_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__BD655389_ctime DB 01H
__618403B0_xtimec@h DB 01H
__F68435D1_xthreads@h DB 01H
__8474DFEE_atomic DB 01H
__527B2299_system_error DB 01H
__0632977E_vcruntime_typeinfo@h DB 01H
__A79F13E8_typeinfo DB 01H
__53EF8FA2_memory DB 01H
__7FAAD8AD_xfacet DB 01H
__53FF2065___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__F528E268_cctype DB 01H
__791C33B7_locale@h DB 01H
__6BA085EC_clocale DB 01H
__B816F020_xlocinfo DB 01H
__0E794DD8_xlocale DB 01H
__81F38733_xiosbase DB 01H
__F7BDEE2D_streambuf DB 01H
__90FE2BCF_xlocnum DB 01H
__F57DF8F3_ios DB 01H
__1D69971C_ostream DB 01H
__7EB9A226_istream DB 01H
__B5399AEE_iostream DB 01H
__C66B2244_main@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z	; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?isLeapYear@@YA_NH@Z				; isLeapYear
PUBLIC	?isValidDate@@YA_NHHH@Z				; isValidDate
PUBLIC	?dayOfYear@@YAHHHH@Z				; dayOfYear
PUBLIC	?daysUntilBirthday@@YAHHHHHH@Z			; daysUntilBirthday
PUBLIC	_main
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_02KIEKHFCC@RU@				; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0CM@IGJAFPEL@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?b?$OA?x?e?c?n?5?p?n?f?d?e?m?h?$PP?5?$CI?D@ ; `string'
PUBLIC	??_C@_0BH@OGMNMLCG@?B?b?e?d?e?m?$OA?5?m?e?b?e?p?m?$OA?$PP?5?d?$OA?r?$OA?4@ ; `string'
PUBLIC	??_C@_0BN@FBMMDICO@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C?C?$CJ?3?5?5@ ; `string'
PUBLIC	??_C@_0BH@DFPLFJBK@?5?9?5?$PN?r?n?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@ ; `string'
PUBLIC	??_C@_0BK@IPNKFALH@?5?9?5?$PN?r?n?5?m?e?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@ ; `string'
PUBLIC	??_C@_0CJ@GOFNKDHK@?O?n?p?$PP?d?j?n?b?$PL?i?5?m?n?l?e?p?5?b?b?e?d?e?m?m?n?c?n?5?d?m?$PP@ ; `string'
PUBLIC	??_C@_0CE@BEFFDCCE@?B?b?e?d?h?r?e?5?r?e?j?s?y?s?$PO?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C@ ; `string'
PUBLIC	??_C@_0CB@ILJAOHLD@?D?m?h?5?d?n?5?q?k?e?d?s?$PO?y?e?c?n?5?d?m?$PP?5?p?n?f?d?e?m?h?$PP?3@ ; `string'
EXTRN	_strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp__setlocale:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0CB@ILJAOHLD@?D?m?h?5?d?n?5?q?k?e?d?s?$PO?y?e?c?n?5?d?m?$PP?5?p?n?f?d?e?m?h?$PP?3@
CONST	SEGMENT
??_C@_0CB@ILJAOHLD@?D?m?h?5?d?n?5?q?k?e?d?s?$PO?y?e?c?n?5?d?m?$PP?5?p?n?f?d?e?m?h?$PP?3@ DB 0c4H
	DB	0edH, 0e8H, ' ', 0e4H, 0eeH, ' ', 0f1H, 0ebH, 0e5H, 0e4H, 0f3H
	DB	0feH, 0f9H, 0e5H, 0e3H, 0eeH, ' ', 0e4H, 0edH, 0ffH, ' ', 0f0H
	DB	0eeH, 0e6H, 0e4H, 0e5H, 0edH, 0e8H, 0ffH, ': ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BEFFDCCE@?B?b?e?d?h?r?e?5?r?e?j?s?y?s?$PO?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C@
CONST	SEGMENT
??_C@_0CE@BEFFDCCE@?B?b?e?d?h?r?e?5?r?e?j?s?y?s?$PO?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C@ DB 0c2H
	DB	0e2H, 0e5H, 0e4H, 0e8H, 0f2H, 0e5H, ' ', 0f2H, 0e5H, 0eaH, 0f3H
	DB	0f9H, 0f3H, 0feH, ' ', 0e4H, 0e0H, 0f2H, 0f3H, ' (', 0c4H, 0c4H
	DB	' ', 0ccH, 0ccH, ' ', 0c3H, 0c3H, 0c3H, 0c3H, '): ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GOFNKDHK@?O?n?p?$PP?d?j?n?b?$PL?i?5?m?n?l?e?p?5?b?b?e?d?e?m?m?n?c?n?5?d?m?$PP@
CONST	SEGMENT
??_C@_0CJ@GOFNKDHK@?O?n?p?$PP?d?j?n?b?$PL?i?5?m?n?l?e?p?5?b?b?e?d?e?m?m?n?c?n?5?d?m?$PP@ DB 0cfH
	DB	0eeH, 0f0H, 0ffH, 0e4H, 0eaH, 0eeH, 0e2H, 0fbH, 0e9H, ' ', 0edH
	DB	0eeH, 0ecH, 0e5H, 0f0H, ' ', 0e2H, 0e2H, 0e5H, 0e4H, 0e5H, 0edH
	DB	0edH, 0eeH, 0e3H, 0eeH, ' ', 0e4H, 0edH, 0ffH, ' ', 0e2H, ' ', 0e3H
	DB	0eeH, 0e4H, 0f3H, ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IPNKFALH@?5?9?5?$PN?r?n?5?m?e?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@
CONST	SEGMENT
??_C@_0BK@IPNKFALH@?5?9?5?$PN?r?n?5?m?e?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@ DB ' '
	DB	'- ', 0fdH, 0f2H, 0eeH, ' ', 0edH, 0e5H, ' ', 0e2H, 0e8H, 0f1H
	DB	0eeH, 0eaH, 0eeH, 0f1H, 0edH, 0fbH, 0e9H, ' ', 0e3H, 0eeH, 0e4H
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DFPLFJBK@?5?9?5?$PN?r?n?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@
CONST	SEGMENT
??_C@_0BH@DFPLFJBK@?5?9?5?$PN?r?n?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@ DB ' '
	DB	'- ', 0fdH, 0f2H, 0eeH, ' ', 0e2H, 0e8H, 0f1H, 0eeH, 0eaH, 0eeH
	DB	0f1H, 0edH, 0fbH, 0e9H, ' ', 0e3H, 0eeH, 0e4H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FBMMDICO@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C?C?$CJ?3?5?5@
CONST	SEGMENT
??_C@_0BN@FBMMDICO@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C?C?$CJ?3?5?5@ DB 0c2H
	DB	0e2H, 0e5H, 0e4H, 0e8H, 0f2H, 0e5H, ' ', 0e4H, 0e0H, 0f2H, 0f3H
	DB	' (', 0c4H, 0c4H, ' ', 0ccH, 0ccH, ' ', 0c3H, 0c3H, 0c3H, 0c3H
	DB	'):  ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OGMNMLCG@?B?b?e?d?e?m?$OA?5?m?e?b?e?p?m?$OA?$PP?5?d?$OA?r?$OA?4@
CONST	SEGMENT
??_C@_0BH@OGMNMLCG@?B?b?e?d?e?m?$OA?5?m?e?b?e?p?m?$OA?$PP?5?d?$OA?r?$OA?4@ DB 0c2H
	DB	0e2H, 0e5H, 0e4H, 0e5H, 0edH, 0e0H, ' ', 0edH, 0e5H, 0e2H, 0e5H
	DB	0f0H, 0edH, 0e0H, 0ffH, ' ', 0e4H, 0e0H, 0f2H, 0e0H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IGJAFPEL@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?b?$OA?x?e?c?n?5?p?n?f?d?e?m?h?$PP?5?$CI?D@
CONST	SEGMENT
??_C@_0CM@IGJAFPEL@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?b?$OA?x?e?c?n?5?p?n?f?d?e?m?h?$PP?5?$CI?D@ DB 0c2H
	DB	0e2H, 0e5H, 0e4H, 0e8H, 0f2H, 0e5H, ' ', 0e4H, 0e0H, 0f2H, 0f3H
	DB	' ', 0e2H, 0e0H, 0f8H, 0e5H, 0e3H, 0eeH, ' ', 0f0H, 0eeH, 0e6H
	DB	0e4H, 0e5H, 0edH, 0e8H, 0ffH, ' (', 0c4H, 0c4H, ' ', 0ccH, 0ccH
	DB	' ', 0c3H, 0c3H, 0c3H, 0c3H, '): ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KIEKHFCC@RU@
CONST	SEGMENT
??_C@_02KIEKHFCC@RU@ DB 'RU', 00H			; `string'
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	023H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	034H
	DW	0435H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	022H
	DW	03cdH
voltbl	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+4]
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -217						; size = 1
__Zero_uncaught_exceptions$ = -17			; size = 1
_this$ = -8						; size = 4
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-28]
	mov	ecx, 7
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 118
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[ebp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[ebp], 0
$LN5@sentry:
	mov	cl, BYTE PTR tv72[ebp]
	mov	BYTE PTR __Zero_uncaught_exceptions$[ebp], cl
; Line 123
	movzx	eax, BYTE PTR __Zero_uncaught_exceptions$[ebp]
	test	eax, eax
	je	SHORT $LN1@sentry
; Line 124
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 126
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Tied$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 97
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 98
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 100
	jmp	SHORT $LN1@sentry
$LN2@sentry:
; Line 103
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Tied$[ebp], eax
; Line 104
	cmp	DWORD PTR __Tied$[ebp], 0
	je	SHORT $LN4@sentry
	mov	eax, DWORD PTR __Tied$[ebp]
	cmp	eax, DWORD PTR __Ostr$[ebp]
	jne	SHORT $LN3@sentry
$LN4@sentry:
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 106
	jmp	SHORT $LN1@sentry
$LN3@sentry:
; Line 109
	mov	esi, esp
	mov	ecx, DWORD PTR __Tied$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 110
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
$LN1@sentry:
; Line 111
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -232						; size = 4
__Rdbuf$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 7
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 85
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN3@Sentry_bas
; Line 86
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:
; Line 88
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Rdbuf$ = -20						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-28]
	mov	ecx, 7
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 78
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN1@Sentry_bas
; Line 79
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 1011
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 1012
	mov	esi, esp
	push	10					; 0000000aH
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1013
	mov	esi, esp
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1014
	mov	eax, DWORD PTR __Ostr$[ebp]
; Line 1015
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -356						; size = 8
tv337 = -348						; size = 8
tv323 = -340						; size = 8
tv284 = -340						; size = 8
tv285 = -336						; size = 4
tv137 = -336						; size = 4
$T2 = -328						; size = 4
$T3 = -316						; size = 4
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
__Ok$ = -76						; size = 8
__Pad$ = -60						; size = 8
__Count$ = -44						; size = 8
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; Line 767
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 37					; 00000025H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __1D69971C_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 772
	mov	DWORD PTR __State$[ebp], 0
; Line 773
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 774
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv323[ebp], eax
	mov	DWORD PTR tv323[ebp+4], edx
	cmp	DWORD PTR tv323[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv323[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv337[ebp], eax
	mov	DWORD PTR tv337[ebp+4], edx
	mov	eax, DWORD PTR tv337[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv337[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 775
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 777
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 778
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 779
	jmp	$LN9@operator
$LN8@operator:
; Line 780
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 781
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 782
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 783
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	edi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T6[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator
; Line 784
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 785
	jmp	SHORT $LN11@operator
$LN12@operator:
; Line 787
	jmp	$LN2@operator
$LN11@operator:
; Line 790
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN13@operator
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	edi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	DWORD PTR tv284[ebp+4], edx
	mov	eax, DWORD PTR tv284[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv284[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN13@operator
$LN27@operator:
; Line 791
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:
; Line 794
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN14@operator
; Line 795
	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN28@operator:
; Line 796
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	edi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	eax, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T4[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator
; Line 797
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 798
	jmp	SHORT $LN14@operator
$LN15@operator:
; Line 800
	jmp	$LN5@operator
$LN14@operator:
; Line 803
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 804
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:
; Line 807
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 808
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 809
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _main
_TEXT	SEGMENT
tv330 = -308						; size = 4
_currentYear$ = -108					; size = 4
_currentMonth$ = -96					; size = 4
_currentDay$ = -84					; size = 4
_year$ = -72						; size = 4
_month$ = -60						; size = 4
_day$ = -48						; size = 4
_birthYear$ = -36					; size = 4
_birthMonth$ = -24					; size = 4
_birthDay$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-116]
	mov	ecx, 29					; 0000001dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 53
	mov	esi, esp
	push	OFFSET ??_C@_02KIEKHFCC@RU@
	push	2
	call	DWORD PTR __imp__setlocale
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 54
	mov	DWORD PTR _birthDay$[ebp], 18		; 00000012H
	mov	DWORD PTR _birthMonth$[ebp], 2
	mov	DWORD PTR _birthYear$[ebp], 2006	; 000007d6H
; Line 56
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	edi, esp
	mov	eax, DWORD PTR _birthYear$[ebp]
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ebx, esp
	mov	ecx, DWORD PTR _birthMonth$[ebp]
	push	ecx
	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, esp
	mov	edx, DWORD PTR _birthDay$[ebp]
	push	edx
	push	OFFSET ??_C@_0CM@IGJAFPEL@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?b?$OA?x?e?c?n?5?p?n?f?d?e?m?h?$PP?5?$CI?D@
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	mov	DWORD PTR tv330[ebp], eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, DWORD PTR tv330[ebp]
	cmp	ecx, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	mov	eax, DWORD PTR _birthYear$[ebp]
	push	eax
	mov	ecx, DWORD PTR _birthMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _birthDay$[ebp]
	push	edx
	call	?isValidDate@@YA_NHHH@Z			; isValidDate
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@main
; Line 59
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0BH@OGMNMLCG@?B?b?e?d?e?m?$OA?5?m?e?b?e?p?m?$OA?$PP?5?d?$OA?r?$OA?4@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 60
	mov	eax, 1
	jmp	$LN1@main
$LN2@main:
; Line 63
	push	OFFSET ??_C@_0BN@FBMMDICO@?B?b?e?d?h?r?e?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C?C?$CJ?3?5?5@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 64
	mov	esi, esp
	lea	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	ebx, esp
	lea	edx, DWORD PTR _day$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 66
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _day$[ebp]
	push	edx
	call	?isValidDate@@YA_NHHH@Z			; isValidDate
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@main
; Line 67
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0BH@OGMNMLCG@?B?b?e?d?e?m?$OA?5?m?e?b?e?p?m?$OA?$PP?5?d?$OA?r?$OA?4@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 68
	mov	eax, 1
	jmp	$LN1@main
$LN3@main:
; Line 71
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@@YA_NH@Z			; isLeapYear
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@main
; Line 72
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0BH@DFPLFJBK@?5?9?5?$PN?r?n?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@
	mov	edi, esp
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	jmp	SHORT $LN5@main
$LN4@main:
; Line 75
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0BK@IPNKFALH@?5?9?5?$PN?r?n?5?m?e?5?b?h?q?n?j?n?q?m?$PL?i?5?c?n?d?4@
	mov	edi, esp
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@main:
; Line 78
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _day$[ebp]
	push	edx
	call	?dayOfYear@@YAHHHH@Z			; dayOfYear
	add	esp, 12					; 0000000cH
	mov	edi, esp
	push	eax
	push	OFFSET ??_C@_0CJ@GOFNKDHK@?O?n?p?$PP?d?j?n?b?$PL?i?5?m?n?l?e?p?5?b?b?e?d?e?m?m?n?c?n?5?d?m?$PP@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 81
	push	OFFSET ??_C@_0CE@BEFFDCCE@?B?b?e?d?h?r?e?5?r?e?j?s?y?s?$PO?5?d?$OA?r?s?5?$CI?D?D?5?L?L?5?C?C?C@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 82
	mov	esi, esp
	lea	eax, DWORD PTR _currentYear$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _currentMonth$[ebp]
	push	ecx
	mov	ebx, esp
	lea	edx, DWORD PTR _currentDay$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	ebx, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 84
	mov	eax, DWORD PTR _currentYear$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currentDay$[ebp]
	push	edx
	call	?isValidDate@@YA_NHHH@Z			; isValidDate
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@main
; Line 85
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	OFFSET ??_C@_0BH@OGMNMLCG@?B?b?e?d?e?m?$OA?5?m?e?b?e?p?m?$OA?$PP?5?d?$OA?r?$OA?4@
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 86
	mov	eax, 1
	jmp	SHORT $LN1@main
$LN6@main:
; Line 89
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	eax, DWORD PTR _currentMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentDay$[ebp]
	push	ecx
	mov	edx, DWORD PTR _birthYear$[ebp]
	push	edx
	mov	eax, DWORD PTR _birthMonth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _birthDay$[ebp]
	push	ecx
	call	?daysUntilBirthday@@YAHHHHHH@Z		; daysUntilBirthday
	add	esp, 20					; 00000014H
	mov	edi, esp
	push	eax
	push	OFFSET ??_C@_0CB@ILJAOHLD@?D?m?h?5?d?n?5?q?k?e?d?s?$PO?y?e?c?n?5?d?m?$PP?5?p?n?f?d?e?m?h?$PP?3@
	mov	edx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	xor	eax, eax
$LN1@main:
; Line 92
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@main:
	DD	6
	DD	$LN14@main
$LN14@main:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@main
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN9@main
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN10@main
	DD	-84					; ffffffacH
	DD	4
	DD	$LN11@main
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN12@main
	DD	-108					; ffffff94H
	DD	4
	DD	$LN13@main
$LN13@main:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	89					; 00000059H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN12@main:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN11@main:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
$LN10@main:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN9@main:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN8@main:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?daysUntilBirthday@@YAHHHHHH@Z
_TEXT	SEGMENT
_currentDayOfYear$ = -20				; size = 4
_birthdayDay$ = -8					; size = 4
_day$ = 8						; size = 4
_month$ = 12						; size = 4
_year$ = 16						; size = 4
_currentDay$ = 20					; size = 4
_currentMonth$ = 24					; size = 4
?daysUntilBirthday@@YAHHHHHH@Z PROC			; daysUntilBirthday, COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR _month$[ebp]
	push	ecx
	mov	edx, DWORD PTR _day$[ebp]
	push	edx
	call	?dayOfYear@@YAHHHH@Z			; dayOfYear
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _birthdayDay$[ebp], eax
; Line 43
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentMonth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currentDay$[ebp]
	push	edx
	call	?dayOfYear@@YAHHHH@Z			; dayOfYear
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _currentDayOfYear$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _birthdayDay$[ebp]
	cmp	eax, DWORD PTR _currentDayOfYear$[ebp]
	jl	SHORT $LN2@daysUntilB
; Line 45
	mov	eax, DWORD PTR _birthdayDay$[ebp]
	sub	eax, DWORD PTR _currentDayOfYear$[ebp]
	jmp	SHORT $LN1@daysUntilB
; Line 46
	jmp	SHORT $LN1@daysUntilB
$LN2@daysUntilB:
; Line 48
	mov	eax, DWORD PTR _currentDayOfYear$[ebp]
	sub	eax, DWORD PTR _birthdayDay$[ebp]
	mov	ecx, 365				; 0000016dH
	sub	ecx, eax
	mov	eax, ecx
$LN1@daysUntilB:
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?daysUntilBirthday@@YAHHHHHH@Z ENDP			; daysUntilBirthday
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dayOfYear@@YAHHHH@Z
_TEXT	SEGMENT
_i$1 = -76						; size = 4
_dayCount$ = -64					; size = 4
_daysInMonth$ = -52					; size = 48
_day$ = 8						; size = 4
_month$ = 12						; size = 4
_year$ = 16						; size = 4
?dayOfYear@@YAHHHH@Z PROC				; dayOfYear, COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 30
	mov	DWORD PTR _daysInMonth$[ebp], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+4], 28	; 0000001cH
	mov	DWORD PTR _daysInMonth$[ebp+8], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+12], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+16], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+20], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+24], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+28], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+32], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+36], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+40], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+44], 31	; 0000001fH
; Line 31
	mov	eax, DWORD PTR _day$[ebp]
	mov	DWORD PTR _dayCount$[ebp], eax
; Line 32
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@dayOfYear
$LN2@dayOfYear:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@dayOfYear:
	mov	eax, DWORD PTR _month$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$1[ebp], eax
	jge	SHORT $LN3@dayOfYear
; Line 33
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _dayCount$[ebp]
	add	ecx, DWORD PTR _daysInMonth$[ebp+eax*4]
	mov	DWORD PTR _dayCount$[ebp], ecx
; Line 34
	jmp	SHORT $LN2@dayOfYear
$LN3@dayOfYear:
; Line 35
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@@YA_NH@Z			; isLeapYear
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@dayOfYear
	cmp	DWORD PTR _month$[ebp], 2
	jle	SHORT $LN5@dayOfYear
; Line 36
	mov	eax, DWORD PTR _dayCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _dayCount$[ebp], eax
$LN5@dayOfYear:
; Line 38
	mov	eax, DWORD PTR _dayCount$[ebp]
; Line 39
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@dayOfYear
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@dayOfYear:
	DD	1
	DD	$LN8@dayOfYear
$LN8@dayOfYear:
	DD	-52					; ffffffccH
	DD	48					; 00000030H
	DD	$LN7@dayOfYear
$LN7@dayOfYear:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?dayOfYear@@YAHHHH@Z ENDP				; dayOfYear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isValidDate@@YA_NHHH@Z
_TEXT	SEGMENT
_daysInMonth$ = -52					; size = 48
_day$ = 8						; size = 4
_month$ = 12						; size = 4
_year$ = 16						; size = 4
?isValidDate@@YA_NHHH@Z PROC				; isValidDate, COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 13
	cmp	DWORD PTR _year$[ebp], 0
	jge	SHORT $LN2@isValidDat
; Line 14
	xor	al, al
	jmp	$LN1@isValidDat
$LN2@isValidDat:
; Line 16
	cmp	DWORD PTR _month$[ebp], 1
	jl	SHORT $LN4@isValidDat
	cmp	DWORD PTR _month$[ebp], 12		; 0000000cH
	jle	SHORT $LN3@isValidDat
$LN4@isValidDat:
; Line 17
	xor	al, al
	jmp	$LN1@isValidDat
$LN3@isValidDat:
; Line 19
	mov	DWORD PTR _daysInMonth$[ebp], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+4], 28	; 0000001cH
	mov	DWORD PTR _daysInMonth$[ebp+8], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+12], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+16], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+20], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+24], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+28], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+32], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+36], 31	; 0000001fH
	mov	DWORD PTR _daysInMonth$[ebp+40], 30	; 0000001eH
	mov	DWORD PTR _daysInMonth$[ebp+44], 31	; 0000001fH
; Line 20
	mov	eax, DWORD PTR _year$[ebp]
	push	eax
	call	?isLeapYear@@YA_NH@Z			; isLeapYear
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@isValidDat
; Line 21
	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR _daysInMonth$[ebp+eax], 29	; 0000001dH
$LN5@isValidDat:
; Line 23
	cmp	DWORD PTR _day$[ebp], 1
	jl	SHORT $LN7@isValidDat
	mov	eax, DWORD PTR _month$[ebp]
	mov	ecx, DWORD PTR _day$[ebp]
	cmp	ecx, DWORD PTR _daysInMonth$[ebp+eax*4-4]
	jle	SHORT $LN6@isValidDat
$LN7@isValidDat:
; Line 24
	xor	al, al
	jmp	SHORT $LN1@isValidDat
$LN6@isValidDat:
; Line 26
	mov	al, 1
$LN1@isValidDat:
; Line 27
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@isValidDat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@isValidDat:
	DD	1
	DD	$LN10@isValidDat
$LN10@isValidDat:
	DD	-52					; ffffffccH
	DD	48					; 00000030H
	DD	$LN9@isValidDat
$LN9@isValidDat:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?isValidDate@@YA_NHHH@Z ENDP				; isValidDate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLeapYear@@YA_NH@Z
_TEXT	SEGMENT
_year$ = 8						; size = 4
?isLeapYear@@YA_NH@Z PROC				; isLeapYear, COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 3
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 4
	mov	eax, DWORD PTR _year$[ebp]
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN7@isLeapYear
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN7@isLeapYear:
	test	eax, eax
	jne	SHORT $LN5@isLeapYear
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN4@isLeapYear
$LN5@isLeapYear:
	mov	eax, DWORD PTR _year$[ebp]
	cdq
	mov	ecx, 400				; 00000190H
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN2@isLeapYear
$LN4@isLeapYear:
; Line 5
	mov	al, 1
	jmp	SHORT $LN1@isLeapYear
; Line 6
	jmp	SHORT $LN1@isLeapYear
$LN2@isLeapYear:
; Line 8
	xor	al, al
$LN1@isLeapYear:
; Line 10
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isLeapYear@@YA_NH@Z ENDP				; isLeapYear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 473
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D14739E9_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 474
	or	eax, -1
; Line 475
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 465
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4]
	mov	ecx, 1
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D14739E9_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 466
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv65[ebp]
; Line 467
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D14739E9_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 403
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\Univer\1 kurs\KPO\KPO_LAB_01\KPO_LAB_01\main.cpp
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C66B2244_main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
